type Schema {
  query: Query
  mutation: Mutation
}

type Query {
  listUsers: UserResult!
  listCompanies: [Company]
  listLowongans: [Lowongan]
  listSkills: [Skills]
  listUserHasSkills: [UserSkills]
  cekLoginUser(email: String, password: String): UserResponse
  cekLoginCompany(email: String, password: String): CompanyResponse
}

type Mutation {
  createUser(
    nama: String, 
    email: String, 
    password: String, 
    nomor_telepon: String, 
    tgl_lahir: String, 
    nik: String, 
    pengalaman: Int, 
    pengalaman_pro: Int, 
    edukasi: String, 
    url_photo: String, 
    deskripsi: String, 
    stream: String): UserResponse!

  createCompany(
    nama: String, 
    alamat: String, 
    email: String, 
    password: String, 
    url_photo: String, 
    deskripsi: String): CompanyResponse

  createLowongan(
    nama: String, 
    deskripsi: String, 
    jmlh_butuh: Int, 
    company_id: Int, 
    url_photo: String): LowonganResponse

  createSkills(nama: String): SkillsResponse

  createUserHasSkills(user_iduser: Int, skills_id: Int): UserSkillsResponse

  createPengalaman(nama_pekerjaan: String, tgl_mulai: String, tgl_selesai: String, tmpt_bekerja: String, pkrjn_profesional: Boolean, user_iduser: Int): PengalamanResponse

  createEdukasi(nama_institusi: String, jenjang: String, tgl_awal: String, tgl_akhir: String, deskripsi: String, user_iduser: Int): EdukasiResponse
}

type UserResult{
    success: Boolean!
    errors: [String]
    users:[User]
}

type User {
  iduser: Int
  nama: String
  email: String
  password: String
  nomor_telepon: String
  tgl_lahir: String
  nik: String
  pengalaman: Int
  pengalaman_pro: Int
  edukasi: String
  url_photo: String
  deskripsi: String
  stream: String
}

type Company {
  id: Int
  nama: String
  alamat: String
  email: String
  password: String
  url_photo: String
  deskripsi: String
}

type Lowongan {
  id: Int
  nama: String
  deskripsi: String
  jmlh_butuh: Int
  company_id: Int
  url_photo: String
  company: Company
}

type Skills {
  id: Int
  nama: String
}

type UserSkills {
  user: User
  skills: Skills
}

type Pengalaman {
  id: Int,
  nama_pekerjaan: String, 
  tgl_mulai: String, 
  tgl_selesai: String, 
  tmpt_bekerja: String, 
  pkrjn_profesional: Boolean, 
  user_iduser: Int
}

type Edukasi {
  id: Int, 
  nama_institusi: String, 
  jenjang: String, 
  tgl_awal: String, 
  tgl_akhir: String, 
  deskripsi: String, 
  user_iduser: Int
}

type UserResponse {
  success: Boolean
  errors: [String]
  user: User
}

type CompanyResponse {
  success: Boolean
  errors: [String]
  company: Company
}

type LowonganResponse {
  success: Boolean
  errors: [String]
  lowongan: Lowongan
}

type SkillsResponse {
  success: Boolean
  errors: [String]
  skills: Skills
}

type UserSkillsResponse {
  success: Boolean
  errors: [String]
  user_has_skills: UserSkills
}

type PengalamanResponse {
  success: Boolean
  errors: [String]
  pengalaman: Pengalaman
}

type EdukasiResponse {
  success: Boolean
  errors: [String]
  edukasi: Edukasi
}
